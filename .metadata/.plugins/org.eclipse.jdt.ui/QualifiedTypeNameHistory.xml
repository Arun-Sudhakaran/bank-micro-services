<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="javax.persistence.Embedded"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="javax.persistence.Embeddable"/>
<fullyQualifiedTypeName name="com.sixdee.etopup.accounts.db.repo.UserRepository"/>
<fullyQualifiedTypeName name="com.sixdee.etopup.accounts.beans.User"/>
<fullyQualifiedTypeName name="com.sixdee.ooredoo.repository.UserRepository"/>
<fullyQualifiedTypeName name="com.sixdee.ooredoo.service.UserService"/>
<fullyQualifiedTypeName name="com.sixdee.ooredoo.domain.User"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="java.util.Calendar"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.aht.account.model.Customer"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="com.aht.account.model.CustomerDetails"/>
<fullyQualifiedTypeName name="com.aht.account.model.Loans"/>
<fullyQualifiedTypeName name="com.aht.account.model.Cards"/>
<fullyQualifiedTypeName name="com.aht.account.service.client.LoansFeignClient"/>
<fullyQualifiedTypeName name="com.aht.account.service.client.CardsFeignClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.lang.Character"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="com.test.Animal"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="com.aht.account.controller.AccountsController"/>
<fullyQualifiedTypeName name="com.aht.cards.controller.CardsController"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="com.aht.loans.controller.LoansController"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.leetcode.algorithm.linkedlist.SinglyLinkedList"/>
<fullyQualifiedTypeName name="com.leetcode.algorithm.linkedlist.DoublyLinkedList.Node"/>
<fullyQualifiedTypeName name="com.leetcode.algorithm.linkedlist.CircularLinkedList.Node"/>
<fullyQualifiedTypeName name="javax.swing.JFrame"/>
<fullyQualifiedTypeName name="com.leetcode.algorithm.linkedlist.SinglyLinkedList.Node"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="io.micrometer.core.instrument.MeterRegistry"/>
<fullyQualifiedTypeName name="io.micrometer.core.aop.TimedAspect"/>
<fullyQualifiedTypeName name="io.micrometer.core.annotation.Timed"/>
</qualifiedTypeNameHistroy>
